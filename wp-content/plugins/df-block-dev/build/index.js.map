{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;AAAuD;AAEvD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf,MAAMC,UAAU,GAAGF,sEAAa,EAAE;EAElC,OAAOG,iEAAA,MAAMD,UAAU,EAAE,gDAA8C,CAAI;AAC/E,CAAC;AAED,iEAAeD,IAAI;;;;;;;;;;;;;;;;;;;ACRkC;AAErD,MAAMG,IAAI,GAAGA,CAAA,KAAK;EACd,MAAMF,UAAU,GAAGF,uEAAkB,EAAE;EAEvC,OAAOG,iEAAA,MAAOD,UAAU,EAAE,uDAAqD,CAAI;AACvF,CAAC;AAED,iEAAeE,IAAI;;;;;;;;;;ACRnB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNqD;AAEvB;AACL;AACA;AAEzB,MAAM;EAAEK;AAAK,CAAC,GAAGF,wCAAI;AAErBD,oEAAiB,CAACG,IAAI,EAAE;EACpBD,IAAI;EACJH,IAAIA,+CAAAA;AACR,CAAC,CAAC,C","sources":["webpack://df-block-dev/./src/edit.js","webpack://df-block-dev/./src/save.js","webpack://df-block-dev/external window [\"wp\",\"blockEditor\"]","webpack://df-block-dev/external window [\"wp\",\"blocks\"]","webpack://df-block-dev/external window [\"wp\",\"element\"]","webpack://df-block-dev/webpack/bootstrap","webpack://df-block-dev/webpack/runtime/compat get default export","webpack://df-block-dev/webpack/runtime/define property getters","webpack://df-block-dev/webpack/runtime/hasOwnProperty shorthand","webpack://df-block-dev/webpack/runtime/make namespace object","webpack://df-block-dev/./src/index.js"],"sourcesContent":["import { useBlockProps } from '@wordpress/block-editor'\r\n\r\nconst Edit = () => {\r\n    const blockProps = useBlockProps()\r\n\r\n    return <p{...blockProps}>Hello World! From the editor. From our edit.js</p>\r\n}\r\n\r\nexport default Edit","import {useBlockProps} from '@wordpress/block-editor'\r\n\r\nconst Save = () =>{\r\n    const blockProps = useBlockProps.save()\r\n\r\n    return <p {...blockProps}>Hello World! From the Frontend. From our save.js file</p>\r\n}\r\n\r\nexport default Save","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks'\r\n\r\nimport json from '/block.json'\r\nimport edit from './edit'\r\nimport save from './save'\r\n\r\nconst { name } = json\r\n\r\nregisterBlockType(name, {\r\n    edit,\r\n    save\r\n})"],"names":["useBlockProps","Edit","blockProps","createElement","Save","save","registerBlockType","json","edit","name"],"sourceRoot":""}